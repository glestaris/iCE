#!/bin/bash
set -e

usage() {
  echo "Usage:"
  echo "run-tests               --- run all the tests"
  echo "run-tests -c            --- create coverage report"
  echo "run-tests -m <Module>   --- only run tests in given module"
  echo "run-tests -v            --- run tests in verbose mode"
  echo "run-tests -h            --- print help menu"
}

setup() {
  echo "[INFO] Starting MongoDB Docker container"
  DOCKER_CONTAINER_ID=$(docker run -d --name test-ice-mongo -p 12222:27017 mongo)
  echo "[INFO] Container is '$DOCKER_CONTAINER_ID'"
}

run_nose() {
  # command
  cmd="nosetests"
  if [ $WITH_COVERAGE -eq 1 ]; then
    cmd=$cmd" --with-coverage"
    cmd=$cmd" --cover-package ice"
    cmd=$cmd" --cover-html"
    cmd=$cmd" --cover-erase"
    cmd=$cmd" --cover-html-dir coveragereport"
  fi
  cmd=$cmd" -v"
  [ "$MODULE" != "" ] && cmd=$cmd" $MODULE"

  # envars
  export TEST_ICE_MONGO_PORT=12222
  [ $VERBOSE -eq 1 ] && export TEST_ICE_DEBUG=1

  echo "[INFO] About to run '$cmd'"

  # run tests but don't blow up
  echo "--------- Nose output START ---------"
  set +e
  eval $cmd
  NOSE_EXIT_CODE=$?
  set -e
  echo "--------- Nose output END ---------"

  echo "[INFO] Nose exited with code $NOSE_EXIT_CODE"
}

teardown() {
  echo "[INFO] Removing MongoDB Docker container"
  docker rm -f test-ice-mongo > /dev/null
  echo "[INFO] The Docker container got cleaned up!"
}

MODULE=""
VERBOSE=0
WITH_COVERAGE=0
while getopts "m:cvh" OPTION
do
  case $OPTION in
    m)
      MODULE=$OPTARG
      ;;
    c)
      WITH_COVERAGE=1
      ;;
    v)
      VERBOSE=1
      ;;
    h)
      usage
      exit
      ;;
    *)
      usage
      exit
      ;;
  esac
done

echo "[DEBUG] module='$MODULE'"
echo "[DEBUG] with_coverage=$WITH_COVERAGE"
echo "[DEBUG] verbose=$VERBOSE"

# some action...
setup
run_nose
teardown

exit $NOSE_EXIT_CODE
